[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Consulting Handbook",
    "section": "",
    "text": "Preface\nIn today’s data-driven world, statistical consulting plays a vital role in supporting research across all domains. This handbook is designed to serve as a practical guide for statistical consultants in a university environment, and is divided into three sections: Client Interactions, Statistical Methodology, and Case Studies.\nThis handbook has been shaped by years of experience in statistical consulting at Iowa State University and inspired by Statistical Consulting by Cabrera and McDougall. Our goal is to empower consultants to approach each project with confidence, curiosity, and a commitment to excellence.\nWe hope this handbook becomes a trusted companion in your consulting journey and enhance impact of your work across the university community.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n\nCode\n1 + 1\n\n\n[1] 2\n\n\n\n\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Summary</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.",
    "crumbs": [
      "References"
    ]
  },
  {
    "objectID": "client_interactions.html",
    "href": "client_interactions.html",
    "title": "Client Interactions",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2",
    "crumbs": [
      "Client Interactions"
    ]
  },
  {
    "objectID": "active_listening.html",
    "href": "active_listening.html",
    "title": "2  Active Listening",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n\nCode\n1 + 1\n\n\n[1] 2",
    "crumbs": [
      "Client Interactions",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Active Listening</span>"
    ]
  },
  {
    "objectID": "statistical_methods.html",
    "href": "statistical_methods.html",
    "title": "Statistical Methods",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2",
    "crumbs": [
      "Statistical Methods"
    ]
  },
  {
    "objectID": "anova_nuances.html",
    "href": "anova_nuances.html",
    "title": "3  ANOVA Nuances",
    "section": "",
    "text": "3.1 Sums of Squares Refresher\nThe three common types of Sums of Squares (SS) are equivalent for balanced data: Type I, II, and III (I believe SAS is to blame for the unhelpful naming). These SS only differ when data is unbalanced.\nSums of Squares can be thought of in many different ways, from calculating squared distances from the regression lines and group means to subtracting projection matrices with nested column spaces. We can consider the SS as sequential F-tests for a null or alternative model (from The Statistical Sleuth), where the scaled difference in SS (alternative - null) form the numerator in the F-test. This can also be thought of in a regression context with setting some coefficients to zero. Each of the three SS types have a particular style of F-tests, which are explained below.\nNotice that the F-test for the highest order interaction is the same for each SS type.\nType I SS are sequential—the order of main effects matters! Notice that for effect A, it’s just the SS of A given the intercept, but for effect B it’s the SS of B given the intercept and A. Type I SS are the only SS that add to the total SS with unbalanced data; Type II and III SS do not add up to anything special with unbalanced data.\nIf we have the variables in a meaningful order, we may be interested in the whole sequence of tests formed by Type I SS.\nType II SS are hierarchical. This SS ignores interactions when testing for main effects (i.e. the interaction is excluded from both the null and alternative model). Type II SS are rarely used.\nType III SS consider dropping one term at a time. Only Type III SS account for all other terms in the model. The corresponding ANOVA F-tests can be used to test for main effects and interactions.\nType IV SS are only relevant for factorial designs with missing cells (i.e. fractional factorials) and are equivalent to Type III when there are no missing cells.\nPutting it all together, the below table is an alternative view of three SS types, taken from slide 60 of Dr. Dan Nettleton’s STAT 0510 lecture 8: Analysis of Variance for Unbalanced Two-Factor Experiments. The model term(s) on the right being conditioned on form the null model, whereas the term on the left is being added to the null model to form the alternative model.\nThe following slide in Dr. Nettleton’s lecture has this table for 3 factors (see slide 61).\nRather than using these default ANOVA tables, you can construct specific tests to address specific scientific questions. In R, this would look something like\nwhere m1 is the null model and m2 is the alternative model.\nWhen you test a null vs alternative model this way in R, the F statistic and p-value will only match the ANOVA table if the alternative model is the full model containing every term. The SS and Means Squares (MS) will all be the same. Only Type III SS always specify the alternative model as the full model.",
    "crumbs": [
      "Statistical Methods",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>ANOVA Nuances</span>"
    ]
  },
  {
    "objectID": "case_studies.html",
    "href": "case_studies.html",
    "title": "Case Studies",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2",
    "crumbs": [
      "Case Studies"
    ]
  },
  {
    "objectID": "example_study.html",
    "href": "example_study.html",
    "title": "4  Example Study",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2",
    "crumbs": [
      "Case Studies",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Example Study</span>"
    ]
  },
  {
    "objectID": "anova_nuances.html#sums-of-squares-refresher",
    "href": "anova_nuances.html#sums-of-squares-refresher",
    "title": "3  ANOVA Nuances",
    "section": "",
    "text": "Variable\nNull Model\nAlternative Model\n\n\n\n\nA\n1 (Intercept-only)\nA\n\n\nB\nA\nA + B\n\n\nAB\nA + B\nA + B + AB\n\n\n\n\n\n\n\n\nVariable\nNull Model\nAlternative Model\n\n\n\n\nA\nB\nA + B\n\n\nB\nA\nA + B\n\n\nAB\nA + B\nA + B + AB\n\n\n\n\n\n\n\nVariable\nNull Model\nAlternative Model\n\n\n\n\nA\nB + AB\nA + B + AB\n\n\nB\nA + AB\nA + B + AB\n\n\nAB\nA + B\nA + B + AB\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSource\nType I\nType II\nType III\n\n\n\n\nA\nSS (A | 1)\nSS (A | 1, B)\nSS (A | 1, B, AB)\n\n\nB\nSS (B | 1, A)\nSS (B | 1, A)\nSS (B | 1, A, AB)\n\n\nAB\nSS (AB | 1, A, B)\nSS (AB | 1, A, B)\nSS (AB | 1, A, B)\n\n\n\n\n\nanova(m1, m2)",
    "crumbs": [
      "Statistical Methods",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>ANOVA Nuances</span>"
    ]
  },
  {
    "objectID": "anova_nuances.html#changing-ss-types",
    "href": "anova_nuances.html#changing-ss-types",
    "title": "3  ANOVA Nuances",
    "section": "3.2 Changing SS Types",
    "text": "3.2 Changing SS Types\n\n3.2.1 In SAS\nSpecifying the SS type in SAS is very simple - you only need to specify / ss3 in the model statement for proc glm or method = type3 in proc mixed. For example, for Type III\n/* proc glm */\nproc glm data=dat;\n    class x1 x2;\n    model y = x1 x2 x1*x2 / ss3;\nrun;\n\n\n/* proc mixed */\nproc mixed data=dat method = type3;\n    class x1 x2;\n    model y = x1 x2 x1*x2;\nrun;\n\n\n3.2.2 In R\nSpecifying the SS type in R is tricky.\nanova in base R calculates Type I SS. For example,\ndat_lm &lt;- lm(y ~ x1 * x2, data=dat)\nanova(dat_lm)\n\n# make sure treatment variables are factors!\nThe car::Anova function allows for Type II and III SS, however the so-called Type III SS does not match emmeans::joint_tests or SAS unless you switch to an orthogonal basis.\nFor Type II,\ncar::Anova(dat_lm, type = 2)\nFor Type III, use emmeans::joint_tests\nemmeans::joint_tests(lm(y ~ x1 * x2, data=dat))\nOr switch to an orthogonal basis using contr.sum, contr.helmert or contr.poly to use car::Anova. Note: contr.SAS is not orthogonal.\noptions(contrasts = c('contr.sum', 'contr.poly') )\ndat_lm2 &lt;- lm(y ~ x1 * x2, data=dat)\ncar::Anova(dat_lm2, type=3)",
    "crumbs": [
      "Statistical Methods",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>ANOVA Nuances</span>"
    ]
  },
  {
    "objectID": "anova_nuances.html#example-alpine-data",
    "href": "anova_nuances.html#example-alpine-data",
    "title": "3  ANOVA Nuances",
    "section": "3.3 Example: Alpine Data",
    "text": "3.3 Example: Alpine Data\nThe alpine data have three factors: place (Cumb, Penn), species (grac, nive), site (Dry, Mid, Wet) with unequal unequal sample sizes, but no missing cells. We will analyze this as a three-way factorial. Credit to Dr. Philip Dixon for this data and example.\n\n3.3.1 Type I SS\n\nRSAS\n\n\nWe calculate Type I using anova in base R,\n\n\nCode\n# create the linear model \nalpine.lm &lt;- lm(lnwt ~ place*site*spp, data=alpine)\n\n# type I (sequential) SS\nanova(alpine.lm)\n\n\nAnalysis of Variance Table\n\nResponse: lnwt\n               Df  Sum Sq Mean Sq F value    Pr(&gt;F)    \nplace           1  5.1939  5.1939 19.4377 2.688e-05 ***\nsite            2  0.5404  0.2702  1.0111    0.3676    \nspp             1 15.9614 15.9614 59.7337 1.007e-11 ***\nplace:site      2  0.4640  0.2320  0.8683    0.4229    \nplace:spp       1  0.5362  0.5362  2.0066    0.1598    \nsite:spp        2 15.8529  7.9264 29.6639 8.865e-11 ***\nplace:site:spp  2  0.1563  0.0781  0.2925    0.7471    \nResiduals      97 25.9192  0.2672                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\nWhich matches SAS.\n\n\nCode\nproc glm;\n  class place spp site;\n  model lnwt = place site spp place*site place*spp site*spp place*site*spp / ss1;\nrun;\n\n\n                             The GLM Procedure\n \n                        Dependent Variable: lnwt   \n\n Source                    DF     Type I SS   Mean Square  F Value  Pr &gt; F\n\n place                      1    5.19393348    5.19393348    19.44  &lt;.0001\n site                       2    0.54036876    0.27018438     1.01  0.3676\n spp                        1   15.96135063   15.96135063    59.73  &lt;.0001\n place*site                 2    0.46403991    0.23201996     0.87  0.4229\n place*spp                  1    0.53616754    0.53616754     2.01  0.1598\n spp*site                   2   15.85289774    7.92644887    29.66  &lt;.0001\n place*spp*site             2    0.15629797    0.07814899     0.29  0.7471\n\n\n\n\n\nTo demonstrate the idea of comparing null and alternative models instead of using the default ANOVA table, let’s test if we need to include site in our model given that we are already including place. This hypothesis test corresponds site in the Type I SS ANOVA table above.\n\n\nCode\nnull.lm &lt;- lm(lnwt ~ place, data=alpine)\nalt.lm &lt;- lm(lnwt ~ place + site, data=alpine)\n\nanova(alt.lm)\n\n\nAnalysis of Variance Table\n\nResponse: lnwt\n           Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nplace       1  5.194  5.1939  9.2607 0.002958 **\nsite        2  0.540  0.2702  0.4817 0.619069   \nResiduals 105 58.890  0.5609                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCode\nanova(null.lm, alt.lm)\n\n\nAnalysis of Variance Table\n\nModel 1: lnwt ~ place\nModel 2: lnwt ~ place + site\n  Res.Df   RSS Df Sum of Sq      F Pr(&gt;F)\n1    107 59.43                           \n2    105 58.89  2   0.54037 0.4817 0.6191\n\n\nAgain, the SS and MS for site match the ANOVA output, however the F statistic and p-value do not match because they are calculated from the MSE of the alternative model only containing place and site.\n\n\nCode\n# anova \n# mean sq / mse (of full model)\n0.2702 / 0.2672 # 1.01 F-stat\n\n\n[1] 1.011228\n\n\nCode\n# mean sq / mse (of alt model)\n0.2702 / 0.56093 # 0.4817 F-stat\n\n\n[1] 0.4817\n\n\nBe careful!\n\n\n3.3.2 Type II SS\n\nRSAS\n\n\nNext, we will do Type II SS in R using car::Anova with type = 2\n\n\nCode\n# type II (hierarchical) SS\ncar::Anova(alpine.lm, type=2)\n\n\nAnova Table (Type II tests)\n\nResponse: lnwt\n                Sum Sq Df F value    Pr(&gt;F)    \nplace           3.0097  1 11.2635   0.00113 ** \nsite            0.9711  2  1.8172   0.16797    \nspp            16.2202  1 60.7025 7.435e-12 ***\nplace:site      0.2484  2  0.4647   0.62970    \nplace:spp       0.1497  1  0.5603   0.45594    \nsite:spp       15.8529  2 29.6639 8.865e-11 ***\nplace:site:spp  0.1563  2  0.2925   0.74708    \nResiduals      25.9192 97                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\nWhich matches SAS\n\n\nCode\nproc glm;\n  class place spp site;\n  model lnwt = place site spp place*site place*spp site*spp place*site*spp / ss2;\nrun;\n\n\n                             The GLM Procedure\n \n                        Dependent Variable: lnwt   \n\n Source                    DF    Type II SS   Mean Square  F Value  Pr &gt; F\n\n place                      1    3.00971222    3.00971222    11.26  0.0011\n site                       2    0.97112780    0.48556390     1.82  0.1680\n spp                        1   16.22022467   16.22022467    60.70  &lt;.0001\n place*site                 2    0.24835684    0.12417842     0.46  0.6297\n place*spp                  1    0.14972544    0.14972544     0.56  0.4559\n spp*site                   2   15.85289774    7.92644887    29.66  &lt;.0001\n place*spp*site             2    0.15629797    0.07814899     0.29  0.7471\n\n\n\n\n\n\n\n3.3.3 Type III SS\n\nRSAS\n\n\nNow, the more complex Type III SS in R. We will show the results from emmeans::joint_tests, which match SAS. We will also show car::Anova with and without an orthogonal basis.\n\n\nCode\n# use emmeans::joint_tests\nemmeans::joint_tests(alpine.lm)\n\n\n model term     df1 df2 F.ratio p.value\n place            1  97  10.959  0.0013\n site             2  97   0.740  0.4796\n spp              1  97  58.084  &lt;.0001\n place:site       2  97   0.393  0.6763\n place:spp        1  97   0.561  0.4559\n site:spp         2  97  29.741  &lt;.0001\n place:site:spp   2  97   0.292  0.7471\n\n\nCode\n# or switch to an orthogonal basis for car::Anova\noptions(contrasts = c('contr.sum', 'contr.poly') )\nalpine2.lm &lt;- lm(lnwt ~ place*site*spp, data=alpine)\ncar::Anova(alpine2.lm, type=3)\n\n\nAnova Table (Type III tests)\n\nResponse: lnwt\n                Sum Sq Df   F value    Pr(&gt;F)    \n(Intercept)    1723.11  1 6448.5415 &lt; 2.2e-16 ***\nplace             2.93  1   10.9592  0.001309 ** \nsite              0.40  2    0.7403  0.479627    \nspp              15.52  1   58.0841 1.697e-11 ***\nplace:site        0.21  2    0.3927  0.676296    \nplace:spp         0.15  1    0.5605  0.455864    \nsite:spp         15.89  2   29.7405 8.453e-11 ***\nplace:site:spp    0.16  2    0.2925  0.747078    \nResiduals        25.92 97                        \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCode\n# otherwise, car::Anova does not match joint_tests or SAS\ncar::Anova(alpine.lm, type=3)\n\n\nAnova Table (Type III tests)\n\nResponse: lnwt\n                Sum Sq Df  F value    Pr(&gt;F)    \n(Intercept)    141.978  1 531.3386 &lt; 2.2e-16 ***\nplace            0.645  1   2.4151  0.123428    \nsite             3.808  2   7.1256  0.001296 ** \nspp              0.392  1   1.4670  0.228759    \nplace:site       0.005  2   0.0098  0.990255    \nplace:spp        0.001  1   0.0043  0.947784    \nsite:spp         7.460  2  13.9598 4.697e-06 ***\nplace:site:spp   0.156  2   0.2925  0.747078    \nResiduals       25.919 97                       \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nThe joint_tests and orthogonal car::Anova output matches SAS, however car::Anova on the original alpine.lm object differs.\n\n\n\n\nCode\nproc glm;\n  class place spp site;\n  model lnwt = place site spp place*site place*spp site*spp place*site*spp / ss3;\nrun;\n\n\n                             The GLM Procedure\n \n                        Dependent Variable: lnwt   \n\n Source                    DF   Type III SS   Mean Square  F Value  Pr &gt; F\n\n place                      1    2.92839766    2.92839766    10.96  0.0013\n site                       2    0.39565116    0.19782558     0.74  0.4796\n spp                        1   15.52056508   15.52056508    58.08  &lt;.0001\n place*site                 2    0.20986856    0.10493428     0.39  0.6763\n place*spp                  1    0.14977498    0.14977498     0.56  0.4559\n spp*site                   2   15.89385223    7.94692612    29.74  &lt;.0001\n place*spp*site             2    0.15629797    0.07814899     0.29  0.7471\n\n\n\n\n\nLet us again look at the idea of comparing null and alternative models by testing for the three-way interaction given that we are including all other model terms. This hypothesis test corresponds to the three-way interaction in the Type III SS ANOVA table above.\n\n\nCode\nnull.lm2 &lt;- lm(lnwt ~ place + site + spp + \n                 place:site + place:spp + site:spp,\n               , data=alpine)\nalt.lm2 &lt;- lm(lnwt ~ place*site*spp, data=alpine)\n\nanova(null.lm2, alt.lm2)\n\n\nAnalysis of Variance Table\n\nModel 1: lnwt ~ place + site + spp + place:site + place:spp + site:spp\nModel 2: lnwt ~ place * site * spp\n  Res.Df    RSS Df Sum of Sq      F Pr(&gt;F)\n1     99 26.076                           \n2     97 25.919  2    0.1563 0.2925 0.7471\n\n\nThis time, the F statistic and p-value match because the alternative model is the full model, as with all hypothesis tests associated with Type III SS.",
    "crumbs": [
      "Statistical Methods",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>ANOVA Nuances</span>"
    ]
  },
  {
    "objectID": "anova_nuances.html#bonus-code",
    "href": "anova_nuances.html#bonus-code",
    "title": "3  ANOVA Nuances",
    "section": "3.4 Bonus Code",
    "text": "3.4 Bonus Code\n\n3.4.1 After ANOVA in R: emmeans with Alpine Data\nTo quote Philip, “R doesn’t make ‘after the ANOVA’ especially easy. The emmeans (successor to lsmeans) package implements a powerful set of after the ANOVA tools. Basic approach is to make a emmeans object for the factor of interest, then look at properties of that object.\nThis example code includes calculating cell means, means within and averaging over place, contrast examples, and much more.\n\n\nCode\n# analysis using emmeans (all three factors are of interest)\nalpine.emm &lt;- emmeans(alpine.lm, c('spp','site','place'))\n\n# cell means with se, df and 95% CI\nalpine.emm\n\n# means within each place\nemmip(alpine.lm, spp ~ site | place)\n\n# cell means for site and spp averaging over place\nemmeans(alpine.lm, c('site','spp'))\n\n# F tests of site effects at each place and spp\njoint_tests(alpine.lm, by=c('place','spp'))\n\n# pairwise comparisons between all cells (not recommended!)\nemmeans(alpine.lm, pairwise ~ place:site:spp)\n\n# or between site and spp averaged over place\nemmeans(alpine.lm, pairwise ~ site:spp)\n\n# can specify same request as a set of factors and desired contrast(s)\nemmeans(alpine.lm, c('site','spp'), contr = 'pairwise')\n\n# sites for each spp averaging over place\nemmeans(alpine.lm, pairwise ~ site | spp)\n\n\n?'contrast-methods' lists all the options for built-in contrasts\nRemember that you must know the order of the groups to properly specify the contrast. You can see the order of the group in many different ways including\n\nLook at the order of the groups in the emmeans() output.\nPrint the emmeans object.\nLook at the sorted order of unique factor values: sort(unique(factor))\n\n\n\nCode\n# let's focus on the sites \nalpine.emm1 &lt;- emmeans(alpine.lm, 'site')\n\n# all pairwise comparisons is easy\nsite.pairs &lt;- pairs(alpine.emm1) # Tukey adjustment by default\n\n# specifying summary( ) with adjust= allows you to choose the adjustment\n# from tukey, bonferroni, none, scheffe, sidak, dunnettx\nsummary(site.pairs, adjust='none') \n\n# and specifying summary( ) with infer=c(T, F) gives you CI's\nsummary(site.pairs, infer=c(T,F))\n# first value for infer is confidence intervals, second is tests\n# so infer=c(F,F) just gives estimates, infer=c(T,T) gives both CI's and tests\n\n# or use confint() to which you can add adjust= to specify adjustments\nconfint(site.pairs)\n\n# can specify desired contrasts either in a call to emmeans() or contrast()\n# notice you can provide multiple contrasts in one call, but you must always \n# give a list even if you are only doing one contrast \ncontrast(alpine.emm1, list('D-MW'=c(1, -0.5, -0.5), 'M-W'=c(0, 1, -1)))\n\nalpine.emm2 &lt;- emmeans(alpine.lm, c('site', 'spp') )\nalpine.c1 &lt;- contrast(alpine.emm2, by='spp', \n                      list('D-MW'=c(1, -0.5, -0.5), \n                           'M-W'=c(0, 1, -1)))\n\n# can get CI's for the contrasts \nsummary(alpine.c1,infer=c(T,F), adjust='bonferroni')\n\n\n\n\n3.4.2 Broad vs Narrow Inference: Alpine Data Mixed Model\nLet’s treat the alpine data as a repeated experiment with a single pooled place*anything interaction, random effect. The places are random (not ideal because only 1 df), so inference is broad-sense to population of places.\n\n\nCode\nlibrary(lme4)\nalpine.lmm &lt;- lmer(lnwt ~ site+spp+site:spp + (1|place) + (1|place:site:spp),\n  data=alpine)\nsummary(alpine.lmm)  # mostly to see estimated variance components\n\njoint_tests(alpine.lmm)\n# uses Kenward-Rogers df adjustments, different implementation than SAS \n# (slightly different when all variance components &gt; 0, and quite different \n# when one or more = 0). R seems to account for estimating the 0, SAS ignores the 0. \n# to see the difference, remove the interaction variance from the model\n\nalpine2.lmm &lt;- lmer(lnwt ~ site+spp+site:spp + (1|place),\n  data=alpine)\nsummary(alpine2.lmm)  # mostly to see estimated variance components\njoint_tests(alpine2.lmm)\n\n# matches SAS with or without interaction variance\n\n\nproc glimmix;\n  class place spp site;\n  model lnwt = site spp site*spp / ddfm = kr;\n  random place place*site*spp;\n  lsmeans site*spp;\n  title 'Repeated experiment analysis, Kenward-Roger df adjustment';\nrun;",
    "crumbs": [
      "Statistical Methods",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>ANOVA Nuances</span>"
    ]
  }
]